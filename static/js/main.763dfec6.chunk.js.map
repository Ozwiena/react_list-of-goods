{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reverseOrder","clearSorting","this","preparedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","Error","reverse","console","log","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,aAAe,WACb,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAfjD,EAkBES,aAAe,WACb,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QAnB1D,4CAsBE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA7DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASS,SACZQ,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKpB,EAASW,OACZM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACzC,MACF,KAAKtB,EAASM,KACZ,MACF,QACE,MAAM,IAAIiB,MAAM,SAUpB,OAPInB,GACFa,EAAaO,UAIfC,QAAQC,IAAIrB,EAAUD,GAEfa,EAkCiBU,CACpB1B,EAAiB,CAAEI,WAAUD,eAG/B,OACE,sBAAKwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBvB,IAAaL,EAASS,SAAW,GAAK,YACnEqB,QAAShB,KAAKP,mBAHhB,iCAQA,wBACEsB,KAAK,SACLD,UAAS,yBAAoBvB,IAAaL,EAASW,OAAS,GAAK,YACjEmB,QAAShB,KAAKJ,aAHhB,4BAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBxB,EAAa,GAAK,YAClD0B,QAAShB,KAAKF,aAHhB,sBAQER,GAAcC,IAAaL,EAASM,OACpC,wBACEuB,KAAK,SACLD,UAAU,4BACVE,QAAShB,KAAKD,aAHhB,sBAUJ,6BACGE,EAAcgB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAnE7D,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.763dfec6.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n      break;\n    default:\n      throw new Error('Error');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseOrder = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  clearSorting = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render(): React.ReactNode {\n    const { sortType, isReversed } = this.state;\n    const preparedGoods = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n            onClick={this.reverseOrder}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.clearSorting}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {preparedGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}